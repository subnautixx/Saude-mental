/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  SessODeTerapia as PrismaSessODeTerapia,
  UsuRio as PrismaUsuRio,
} from "@prisma/client";

export class SessODeTerapiaServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.SessODeTerapiaCountArgs, "select">
  ): Promise<number> {
    return this.prisma.sessODeTerapia.count(args);
  }

  async sessODeTerapias<T extends Prisma.SessODeTerapiaFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.SessODeTerapiaFindManyArgs>
  ): Promise<PrismaSessODeTerapia[]> {
    return this.prisma.sessODeTerapia.findMany<Prisma.SessODeTerapiaFindManyArgs>(
      args
    );
  }
  async sessODeTerapia<T extends Prisma.SessODeTerapiaFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.SessODeTerapiaFindUniqueArgs>
  ): Promise<PrismaSessODeTerapia | null> {
    return this.prisma.sessODeTerapia.findUnique(args);
  }
  async createSessODeTerapia<T extends Prisma.SessODeTerapiaCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.SessODeTerapiaCreateArgs>
  ): Promise<PrismaSessODeTerapia> {
    return this.prisma.sessODeTerapia.create<T>(args);
  }
  async updateSessODeTerapia<T extends Prisma.SessODeTerapiaUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.SessODeTerapiaUpdateArgs>
  ): Promise<PrismaSessODeTerapia> {
    return this.prisma.sessODeTerapia.update<T>(args);
  }
  async deleteSessODeTerapia<T extends Prisma.SessODeTerapiaDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.SessODeTerapiaDeleteArgs>
  ): Promise<PrismaSessODeTerapia> {
    return this.prisma.sessODeTerapia.delete(args);
  }

  async getUsuRio(parentId: string): Promise<PrismaUsuRio | null> {
    return this.prisma.sessODeTerapia
      .findUnique({
        where: { id: parentId },
      })
      .usuRio();
  }
}
